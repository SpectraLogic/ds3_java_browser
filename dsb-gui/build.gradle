/*
 * ******************************************************************************
 *    Copyright 2016-2018 Spectra Logic Corporation. All Rights Reserved.
 *    Licensed under the Apache License, Version 2.0 (the "License"). You may not use
 *    this file except in compliance with the License. A copy of the License is located at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *    or in the "license" file accompanying this file.
 *    This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 *    CONDITIONS OF ANY KIND, either express or implied. See the License for the
 *    specific language governing permissions and limitations under the License.
 * ******************************************************************************
 */

import java.nio.file.Files
import java.nio.file.Path

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
        classpath "com.netflix.nebula:gradle-ospackage-plugin:4.6.0"
    }
}

/*As a workaround mainClassName must be set before shadowJar is applied
  Otherwise shadow:2.0.2 displays the following error:
  A problem was found with the configuration of task ':dsb-gui:shadowJar'.
  Registering invalid inputs and outputs via TaskInputs and TaskOutputs methods has been deprecated and is scheduled to be removed in Gradle 5.0.
 - No value has been specified for property 'mainClassName'.
 */
apply plugin: 'application'
mainClassName = 'com.spectralogic.dsbrowser.gui.Main'

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: "nebula.ospackage"


dependencies {
    compile project(":dsb-api")
    compile project(":dsb-util")
    compile group: 'io.github.lukehutch', name: 'fast-classpath-scanner', version: '2.21'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.5'
}

shadowJar {
    dependencies {
        exclude 'org.mockito:mockito-core:1.10.19'
        exclude 'junit:junit:4.12'
    }
}

task genConfigProperties {
    doLast {
        Path configPath = sourceSets.main.output.resourcesDir.toPath()
        Files.createDirectories(configPath)

        File configFile = new File(sourceSets.main.output.resourcesDir, "/dsb_build.properties")
        configFile.withWriter { out ->
            out.writeLine("version=" + version)
            out.writeLine("build.date=" + new Date().toString())
        }
    }
}

classes.dependsOn genConfigProperties

ospackage {
    packageName = 'eonbrowser'
    version = '5.0.1'
    release = '1'
    os = LINUX

    from(distTar.outputs.files) {
        into '/opt/eonbrowser'
    }
    postInstall('tar xf /opt/eonbrowser/dsb-gui-2.1.5.tar -C /opt/eonbrowser/')
    postInstall('ln -s  /opt/eonbrowser/dsb-gui-2.1.5/bin/dsb-gui /sbin/eonbrowser')
    preUninstall('unlink /sbin/eonbrowser')
    preUninstall('rm -rf /opt/eonbrowser/*')

}

buildRpm {
    requires('java-1.8.0-openjdk')
    requires('openjfx')
    requires('gtk+')
    requires('gtk2')
    requires('libXtst')
    requires('libxslt')
    requires('java-1.8.0-openjdk-openjfx')
}

buildDeb {
    requires('openjdk-8-jre')
    requires('libopenjfx-java')
    requires('openjfx')
}

