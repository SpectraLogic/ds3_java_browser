/*
 * *****************************************************************************
 *    Copyright 2014-2018 Spectra Logic Corporation. All Rights Reserved.
 *    Licensed under the Apache License, Version 2.0 (the "License"). You may not use
 *    this file except in compliance with the License. A copy of the License is located at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *    or in the "license" file accompanying this file.
 *    This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 *    CONDITIONS OF ANY KIND, either express or implied. See the License for the
 *    specific language governing permissions and limitations under the License.
 *  ****************************************************************************
 */

buildscript {
    ext.kotlin_version = '1.3.50'

    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.25.0'
    }
}

plugins {
    id 'org.jlleitschuh.gradle.ktlint' version '7.2.1'
}

allprojects {
    group = 'com.spectralogic.dsbrowser'
    version = '5.0.9'
}

subprojects {
    apply plugin: 'com.github.ben-manes.versions'
    apply plugin: 'maven'
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: "org.jlleitschuh.gradle.ktlint"

    sourceCompatibility = JavaVersion.VERSION_1_8
    kotlin { experimental { coroutines 'enable' } }

    repositories {
        maven {
            url 'http://dl.bintray.com/spectralogic/ds3'
        }
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        compile "com.spectralogic.ds3:ds3-sdk:$bpclientVersion"
        compile "com.spectralogic.ds3:ds3-metadata:$bpclientVersion"
        compile 'com.airhacks:afterburner.fx:1.7.0'
        compile 'org.controlsfx:controlsfx:8.40.15'
        compile 'de.jensd:fontawesomefx:8.9'
        compile 'org.slf4j:slf4j-api:1.7.25'
        compile 'ch.qos.logback:logback-classic:1.2.3'
        compile 'ch.qos.logback:logback-core:1.2.3'
        compile 'org.fxmisc.richtext:richtextfx:0.10.2'
        compile 'net.java.dev.jna:jna-platform:5.4.0'
        compile 'net.java.dev.jna:jna:4.5.2'
        compile 'io.reactivex.rxjava2:rxjava:2.2.12'
        compile 'io.reactivex.rxjava2:rxjavafx:2.2.2'
        compile "io.reactivex.rxjava2:rxkotlin:2.4.0"
        compile 'com.github.thomasnield:rxkotlinfx:2.2.2'
        compile 'com.google.inject:guice:4.2.2'
        compile 'com.google.inject.extensions:guice-assistedinject:4.2.2'
        compile 'com.google.guava:guava:28.1-jre'
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.1'
        testCompile "org.hamcrest:hamcrest-all:1.3"
        testCompile 'junit:junit:4.12'
        testCompile "org.assertj:assertj-core:3.13.2"
        testCompile "org.assertj:assertj-guava:3.2.1"
        testCompile project(":dsb-test-util")
        testCompile('org.mockito:mockito-core:3.0.0') {
            exclude group: 'org.hamcrest'// https://mvnrepository.com/artifact/net.java.dev.jna/jna
            compile group: 'net.java.dev.jna', name: 'jna', version: '4.5.2'
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
}


wrapper {
    gradleVersion = '5.6.2'
}
